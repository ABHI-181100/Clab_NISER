# ---------  abhinav raj 2311006 -----------
#########################  question-1 ###########################


import numpy as np
import matplotlib.pyplot as plt
import math
import numpy as np



def f1(x,y):
    return y- x**2
def f2(x,y):
    return (x + y)**2

def f3(x):
    return x**2 + 2*x +2-2*math.exp(x)

def f4(x):
    return math.tan(x + math.pi/4) - x


x_vals1 = np.linspace(0, 2, 100)
y_vals_f3 = [f3(x) for x in x_vals1]

x_vals2 = np.linspace(0, math.pi/5, 100)
y_vals_f4 = [f4(x) for x in x_vals2]

b1 = 2.0
def forward_euler(f, a, b, y0, h):

    L_x = [a]
    L_y = [y0]

    for _ in range(int((b - a) / h)):
        L_y.append(L_y[-1] + h * f(L_x[-1], L_y[-1]))
        L_x.append(L_x[-1] + h)
    
    return L_x, L_y 

x1, y1 = forward_euler(f1, 0, 2, 0, 0.1)
x3, y3 = forward_euler(f2, 0, math.pi/5, 1, 0.1)




def predictor_corrector(f, a,b , y0, h):

    
    L_x = [a]
    L_y = [y0]
    for i in range(int((b - a) / h)):
        y_pred = L_y[-1] + h * f(L_x[-1], L_y[-1])
        x_new = L_x[-1] + h
        y_new = L_y[-1] + (h / 2) * (f(L_x[-1], L_y[-1]) + f(x_new, y_pred))
        L_x.append(x_new)
        L_y.append(y_new)

    return L_x, L_y

x2, y2 = predictor_corrector(f1, 0, 2, 0, 0.1)
x4, y4 = predictor_corrector(f2, 0, math.pi/5, 1, 0.1)
plt.plot(x_vals1, y_vals_f3, label="Analytic f1")
plt.plot(x1, y1, linestyle='dashed' , label="Forward Euler f1")
plt.plot(x2, y2, linestyle='dotted' , label="Predictor-Corrector f1")
plt.legend()
plt.show()

plt.plot(x_vals2, y_vals_f4, label="Analytic f2")
plt.plot(x3, y3, linestyle='dashed' , label="Forward Euler f2")
plt.plot(x4, y4, linestyle='dotted' , label="Predictor-Corrector f2")
plt.legend()
plt.show()

